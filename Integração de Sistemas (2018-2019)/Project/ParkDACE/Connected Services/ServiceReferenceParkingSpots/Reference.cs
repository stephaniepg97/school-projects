//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParkDACE.ServiceReferenceParkingSpots {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParkingSpot", Namespace="http://schemas.datacontract.org/2004/07/BOT_SpotSensor")]
    [System.SerializableAttribute()]
    public partial class ParkingSpot : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BatteryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ParkDACE.ServiceReferenceParkingSpots.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ParkDACE.ServiceReferenceParkingSpots.Type TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BatteryStatus {
            get {
                return this.BatteryStatusField;
            }
            set {
                if ((this.BatteryStatusField.Equals(value) != true)) {
                    this.BatteryStatusField = value;
                    this.RaisePropertyChanged("BatteryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParkId {
            get {
                return this.ParkIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParkIdField, value) != true)) {
                    this.ParkIdField = value;
                    this.RaisePropertyChanged("ParkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotId {
            get {
                return this.SpotIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotIdField, value) != true)) {
                    this.SpotIdField = value;
                    this.RaisePropertyChanged("SpotId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ParkDACE.ServiceReferenceParkingSpots.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ParkDACE.ServiceReferenceParkingSpots.Type Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/BOT_SpotSensor")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Type", Namespace="http://schemas.datacontract.org/2004/07/BOT_SpotSensor")]
    public enum Type : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParkingSpot = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialParkingSpot = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceParkingSpots.IServiceParkingSpots")]
    public interface IServiceParkingSpots {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceParkingSpots/CreateParkingSpotXML", ReplyAction="http://tempuri.org/IServiceParkingSpots/CreateParkingSpotXMLResponse")]
        bool CreateParkingSpotXML(ParkDACE.ServiceReferenceParkingSpots.ParkingSpot newParkingSpot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceParkingSpots/CreateParkingSpotXML", ReplyAction="http://tempuri.org/IServiceParkingSpots/CreateParkingSpotXMLResponse")]
        System.Threading.Tasks.Task<bool> CreateParkingSpotXMLAsync(ParkDACE.ServiceReferenceParkingSpots.ParkingSpot newParkingSpot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceParkingSpots/GetParkingSpot", ReplyAction="http://tempuri.org/IServiceParkingSpots/GetParkingSpotResponse")]
        ParkDACE.ServiceReferenceParkingSpots.ParkingSpot GetParkingSpot();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceParkingSpots/GetParkingSpot", ReplyAction="http://tempuri.org/IServiceParkingSpots/GetParkingSpotResponse")]
        System.Threading.Tasks.Task<ParkDACE.ServiceReferenceParkingSpots.ParkingSpot> GetParkingSpotAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceParkingSpots/GetParkingSpotXML", ReplyAction="http://tempuri.org/IServiceParkingSpots/GetParkingSpotXMLResponse")]
        string GetParkingSpotXML();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceParkingSpots/GetParkingSpotXML", ReplyAction="http://tempuri.org/IServiceParkingSpots/GetParkingSpotXMLResponse")]
        System.Threading.Tasks.Task<string> GetParkingSpotXMLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceParkingSpots/ValidateXmlFile", ReplyAction="http://tempuri.org/IServiceParkingSpots/ValidateXmlFileResponse")]
        bool ValidateXmlFile(string str_docXML, string str_filenameXSD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceParkingSpots/ValidateXmlFile", ReplyAction="http://tempuri.org/IServiceParkingSpots/ValidateXmlFileResponse")]
        System.Threading.Tasks.Task<bool> ValidateXmlFileAsync(string str_docXML, string str_filenameXSD);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceParkingSpotsChannel : ParkDACE.ServiceReferenceParkingSpots.IServiceParkingSpots, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceParkingSpotsClient : System.ServiceModel.ClientBase<ParkDACE.ServiceReferenceParkingSpots.IServiceParkingSpots>, ParkDACE.ServiceReferenceParkingSpots.IServiceParkingSpots {
        
        public ServiceParkingSpotsClient() {
        }
        
        public ServiceParkingSpotsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceParkingSpotsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceParkingSpotsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceParkingSpotsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateParkingSpotXML(ParkDACE.ServiceReferenceParkingSpots.ParkingSpot newParkingSpot) {
            return base.Channel.CreateParkingSpotXML(newParkingSpot);
        }
        
        public System.Threading.Tasks.Task<bool> CreateParkingSpotXMLAsync(ParkDACE.ServiceReferenceParkingSpots.ParkingSpot newParkingSpot) {
            return base.Channel.CreateParkingSpotXMLAsync(newParkingSpot);
        }
        
        public ParkDACE.ServiceReferenceParkingSpots.ParkingSpot GetParkingSpot() {
            return base.Channel.GetParkingSpot();
        }
        
        public System.Threading.Tasks.Task<ParkDACE.ServiceReferenceParkingSpots.ParkingSpot> GetParkingSpotAsync() {
            return base.Channel.GetParkingSpotAsync();
        }
        
        public string GetParkingSpotXML() {
            return base.Channel.GetParkingSpotXML();
        }
        
        public System.Threading.Tasks.Task<string> GetParkingSpotXMLAsync() {
            return base.Channel.GetParkingSpotXMLAsync();
        }
        
        public bool ValidateXmlFile(string str_docXML, string str_filenameXSD) {
            return base.Channel.ValidateXmlFile(str_docXML, str_filenameXSD);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateXmlFileAsync(string str_docXML, string str_filenameXSD) {
            return base.Channel.ValidateXmlFileAsync(str_docXML, str_filenameXSD);
        }
    }
}
